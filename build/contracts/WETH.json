{
  "contractName": "WETH",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MILLION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SYMBOL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILLION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/WETH.sol\":\"WETH\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/WETH.sol\":{\"keccak256\":\"0x6494ec04d20704377c1829752dcdad11da00a9ceb8e3a6fbe4e99271f1455ea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c89bcc23b767d82baff5c30d45caee677d6bcfde67140266303d447800806e5b\",\"dweb:/ipfs/QmcBE9HXB3b5MshfmiJunePDhQMmcZ6puExzj6DBe9qyJE\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252600981527f574554482054455354000000000000000000000000000000000000000000000060208083019182528351808501909452600484527f57455448000000000000000000000000000000000000000000000000000000009084015281519192916200008c9160039162000220565b508051620000a290600490602084019062000220565b50620000e59150339050620000ba6012600a6200032c565b620000c990620f4240620003f8565b620000d6906064620003f8565b640100000000620000eb810204565b6200049f565b600160a060020a03821662000160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b62000177600083836401000000006200021b810204565b80600260008282546200018b9190620002c6565b9091555050600160a060020a03821660009081526020819052604081208054839290620001ba908490620002c6565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a362000217600083836401000000006200021b810204565b5050565b505050565b8280546200022e906200041a565b90600052602060002090601f0160209004810192826200025257600085556200029d565b82601f106200026d57805160ff19168380011785556200029d565b828001600101855582156200029d579182015b828111156200029d57825182559160200191906001019062000280565b50620002ab929150620002af565b5090565b5b80821115620002ab5760008155600101620002b0565b60008219821115620002dc57620002dc62000470565b500190565b600181815b808511156200032457816000190482111562000306576200030662000470565b808516156200031457918102915b60029094049390800290620002e6565b509250929050565b60006200033a838362000341565b9392505050565b6000826200035257506001620003f2565b816200036157506000620003f2565b81600181146200037a57600281146200038557620003a6565b6001915050620003f2565b60ff84111562000399576200039962000470565b8360020a915050620003f2565b5060208310610133831016604e8410600b8410161715620003cb575081810a620003f2565b620003d78383620002e1565b8060001904821115620003ee57620003ee62000470565b0290505b92915050565b600081600019048311821515161562000415576200041562000470565b500290565b6002810460018216806200042f57607f821691505b602082108114156200046a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610c1380620004af6000396000f3fe608060405234801561001057600080fd5b506004361061011d576000357c01000000000000000000000000000000000000000000000000000000009004806339509351116100b4578063a457c2d711610083578063a457c2d714610239578063a9059cbb1461024c578063dd62ed3e1461025f578063f76f8d781461029857600080fd5b806339509351146101b957806370a08231146101cc57806395d89b41146101f5578063a3f4df7e146101fd57600080fd5b80632e0f2625116100f05780632e0f2625146101885780632ff2e9dc146101a2578063313ce567146101aa57806332bc934c146101b157600080fd5b806306fdde0314610122578063095ea7b31461014057806318160ddd1461016357806323b872dd14610175575b600080fd5b61012a6102d4565b60405161013791906109e2565b60405180910390f35b61015361014e3660046109b9565b610366565b6040519015158152602001610137565b6002545b604051908152602001610137565b61015361018336600461097e565b61037d565b610190601281565b60405160ff9091168152602001610137565b610167610444565b6012610190565b61016761046b565b6101536101c73660046109b9565b610484565b6101676101da36600461092b565b600160a060020a031660009081526020819052604090205490565b61012a6104c0565b61012a6040518060400160405280600981526020017f574554482054455354000000000000000000000000000000000000000000000081525081565b6101536102473660046109b9565b6104cf565b61015361025a3660046109b9565b610583565b61016761026d36600461094c565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b61012a6040518060400160405280600481526020017f574554480000000000000000000000000000000000000000000000000000000081525081565b6060600380546102e390610b5a565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90610b5a565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b6000610373338484610590565b5060015b92915050565b600061038a8484846106ee565b600160a060020a03841660009081526001602090815260408083203384529091529020548281101561042c5760405160e560020a62461bcd02815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104398533858403610590565b506001949350505050565b6104506012600a610a92565b61045d90620f4240610b3b565b610468906064610b3b565b81565b6104776012600a610a92565b61046890620f4240610b3b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103739185906104bb908690610a35565b610590565b6060600480546102e390610b5a565b336000908152600160209081526040808320600160a060020a03861684529091528120548281101561056c5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610423565b6105793385858403610590565b5060019392505050565b60006103733384846106ee565b600160a060020a03831661060e5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a03821661068d5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a03831661076d5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a0382166107ec5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a0383166000908152602081905260409020548181101561087e5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a038085166000908152602081905260408082208585039055918516815290812080548492906108b5908490610a35565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161090191815260200190565b60405180910390a350505050565b8035600160a060020a038116811461092657600080fd5b919050565b60006020828403121561093c578081fd5b6109458261090f565b9392505050565b6000806040838503121561095e578081fd5b6109678361090f565b91506109756020840161090f565b90509250929050565b600080600060608486031215610992578081fd5b61099b8461090f565b92506109a96020850161090f565b9150604084013590509250925092565b600080604083850312156109cb578182fd5b6109d48361090f565b946020939093013593505050565b6000602080835283518082850152825b81811015610a0e578581018301518582016040015282016109f2565b81811115610a1f5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4857610a48610bae565b500190565b600181815b80851115610a8a578160001904821115610a6e57610a6e610bae565b80851615610a7b57918102915b60029094049390800290610a52565b509250929050565b60006109458383600082610aa857506001610377565b81610ab557506000610377565b8160018114610acb5760028114610ad557610af2565b6001915050610377565b60ff841115610ae657610ae6610bae565b8360020a915050610377565b5060208310610133831016604e8410600b8410161715610b15575081810a610377565b610b1f8383610a4d565b8060001904821115610b3357610b33610bae565b029392505050565b6000816000190483118215151615610b5557610b55610bae565b500290565b600281046001821680610b6e57607f821691505b60208210811415610ba8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212203d0eb02f14046a13bc768b46c5676a8fa0818b56b567adb9ba249cce08f1961564736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061011d576000357c01000000000000000000000000000000000000000000000000000000009004806339509351116100b4578063a457c2d711610083578063a457c2d714610239578063a9059cbb1461024c578063dd62ed3e1461025f578063f76f8d781461029857600080fd5b806339509351146101b957806370a08231146101cc57806395d89b41146101f5578063a3f4df7e146101fd57600080fd5b80632e0f2625116100f05780632e0f2625146101885780632ff2e9dc146101a2578063313ce567146101aa57806332bc934c146101b157600080fd5b806306fdde0314610122578063095ea7b31461014057806318160ddd1461016357806323b872dd14610175575b600080fd5b61012a6102d4565b60405161013791906109e2565b60405180910390f35b61015361014e3660046109b9565b610366565b6040519015158152602001610137565b6002545b604051908152602001610137565b61015361018336600461097e565b61037d565b610190601281565b60405160ff9091168152602001610137565b610167610444565b6012610190565b61016761046b565b6101536101c73660046109b9565b610484565b6101676101da36600461092b565b600160a060020a031660009081526020819052604090205490565b61012a6104c0565b61012a6040518060400160405280600981526020017f574554482054455354000000000000000000000000000000000000000000000081525081565b6101536102473660046109b9565b6104cf565b61015361025a3660046109b9565b610583565b61016761026d36600461094c565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b61012a6040518060400160405280600481526020017f574554480000000000000000000000000000000000000000000000000000000081525081565b6060600380546102e390610b5a565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90610b5a565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b6000610373338484610590565b5060015b92915050565b600061038a8484846106ee565b600160a060020a03841660009081526001602090815260408083203384529091529020548281101561042c5760405160e560020a62461bcd02815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104398533858403610590565b506001949350505050565b6104506012600a610a92565b61045d90620f4240610b3b565b610468906064610b3b565b81565b6104776012600a610a92565b61046890620f4240610b3b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103739185906104bb908690610a35565b610590565b6060600480546102e390610b5a565b336000908152600160209081526040808320600160a060020a03861684529091528120548281101561056c5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610423565b6105793385858403610590565b5060019392505050565b60006103733384846106ee565b600160a060020a03831661060e5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a03821661068d5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a03831661076d5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a0382166107ec5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a0383166000908152602081905260409020548181101561087e5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610423565b600160a060020a038085166000908152602081905260408082208585039055918516815290812080548492906108b5908490610a35565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161090191815260200190565b60405180910390a350505050565b8035600160a060020a038116811461092657600080fd5b919050565b60006020828403121561093c578081fd5b6109458261090f565b9392505050565b6000806040838503121561095e578081fd5b6109678361090f565b91506109756020840161090f565b90509250929050565b600080600060608486031215610992578081fd5b61099b8461090f565b92506109a96020850161090f565b9150604084013590509250925092565b600080604083850312156109cb578182fd5b6109d48361090f565b946020939093013593505050565b6000602080835283518082850152825b81811015610a0e578581018301518582016040015282016109f2565b81811115610a1f5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610a4857610a48610bae565b500190565b600181815b80851115610a8a578160001904821115610a6e57610a6e610bae565b80851615610a7b57918102915b60029094049390800290610a52565b509250929050565b60006109458383600082610aa857506001610377565b81610ab557506000610377565b8160018114610acb5760028114610ad557610af2565b6001915050610377565b60ff841115610ae657610ae6610bae565b8360020a915050610377565b5060208310610133831016604e8410600b8410161715610b15575081810a610377565b610b1f8383610a4d565b8060001904821115610b3357610b33610bae565b029392505050565b6000816000190483118215151615610b5557610b55610bae565b500290565b600281046001821680610b6e57607f821691505b60208210811415610ba8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212203d0eb02f14046a13bc768b46c5676a8fa0818b56b567adb9ba249cce08f1961564736f6c63430008040033",
  "immutableReferences": {},
  "sourceMap": "114:520:5:-:0;;;548:84;;;;;;;;;-1:-1:-1;568:4:5;;;;;;;;;;;;;;;;;;;574:6;;;;;;;;;;;;;;;;1972:13:54;;568:4:5;;574:6;1972:13:54;;:5;;:13;:::i;:::-;-1:-1:-1;1995:17:54;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;592:33:5::1;::::0;-1:-1:-1;598:10:5::1;::::0;-1:-1:-1;421:23:5::1;348:2;421;:23;:::i;:::-;412:33;::::0;:5:::1;:33;:::i;:::-;527:13;::::0;:3:::1;:13;:::i;:::-;592:5;;::::0;::::1;:33;:::i;:::-;114:520:::0;;8254:389:54;-1:-1:-1;;;;;8337:21:54;;8329:65;;;;;;;216:2:74;8329:65:54;;;198:21:74;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8329:65:54;;;;;;;;8405:49;8434:1;8438:7;8447:6;8405:20;;;;:49;:::i;:::-;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8497:18:54;;:9;:18;;;;;;;;;;:28;;8519:6;;8497:9;:28;;8519:6;;8497:28;:::i;:::-;;;;-1:-1:-1;;8540:37:54;;520:25:74;;;-1:-1:-1;;;;;8540:37:54;;;8557:1;;8540:37;;508:2:74;493:18;8540:37:54;;;;;;;8588:48;8616:1;8620:7;8629:6;8588:19;;;;:48;:::i;:::-;8254:389;;:::o;10916:121::-;;;;:::o;114:520:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:520:5;;;-1:-1:-1;114:520:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:128:74;596:3;627:1;623:6;620:1;617:13;614:2;;;633:18;;:::i;:::-;-1:-1:-1;669:9:74;;604:80::o;689:419::-;778:1;821:5;778:1;835:267;856:7;846:8;843:21;835:267;;;915:4;911:1;907:6;903:17;897:4;894:27;891:2;;;924:18;;:::i;:::-;974:7;964:8;960:22;957:2;;;994:16;;;;957:2;1087:4;1073:19;;;;1033:15;;;;835:267;;;839:3;753:355;;;;;:::o;1113:131::-;1173:5;1202:36;1229:8;1223:4;1202:36;:::i;:::-;1193:45;1183:61;-1:-1:-1;;;1183:61:74:o;1249:806::-;1298:5;1328:8;1318:2;;-1:-1:-1;1369:1:74;1383:5;;1318:2;1417:4;1407:2;;-1:-1:-1;1454:1:74;1468:5;;1407:2;1499:4;1517:1;1512:59;;;;1585:1;1580:130;;;;1492:218;;1512:59;1542:1;1533:10;;1556:5;;;1580:130;1617:3;1607:8;1604:17;1601:2;;;1624:18;;:::i;:::-;1673:8;1670:1;1666:16;1657:25;;1695:5;;;1492:218;;1794:2;1784:8;1781:16;1775:3;1769:4;1766:13;1762:36;1756:2;1746:8;1743:16;1738:2;1732:4;1729:12;1725:35;1722:77;1719:2;;;-1:-1:-1;1831:19:74;;;1863:5;;1719:2;1910:34;1935:8;1929:4;1910:34;:::i;:::-;1980:6;1976:1;1972:6;1968:19;1959:7;1956:32;1953:2;;;1991:18;;:::i;:::-;2029:20;;-1:-1:-1;1308:747:74;;;;;:::o;2060:168::-;2100:7;2166:1;2162;2158:6;2154:14;2151:1;2148:21;2143:1;2136:9;2129:17;2125:45;2122:2;;;2173:18;;:::i;:::-;-1:-1:-1;2213:9:74;;2112:116::o;2233:437::-;2318:1;2308:12;;2365:1;2355:12;;;2376:2;;2430:4;2422:6;2418:17;2408:27;;2376:2;2483;2475:6;2472:14;2452:18;2449:38;2446:2;;;2520:77;2517:1;2510:88;2621:4;2618:1;2611:15;2649:4;2646:1;2639:15;2446:2;;2288:382;;;:::o;2675:184::-;2727:77;2724:1;2717:88;2824:4;2821:1;2814:15;2848:4;2845:1;2838:15;2707:152;114:520:5;;;;;;",
  "deployedSourceMap": "114:520:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;:::i;:::-;;:::i;:::-;;;1468:14:74;;1461:22;1443:41;;1431:2;1416:18;4181:166:54;1398:92:74;3172:106:54;3259:12;;3172:106;;;5089:25:74;;;5077:2;5062:18;3172:106:54;5044:76:74;4814:478:54;;;;;;:::i;:::-;;:::i;315:35:5:-;;348:2;315:35;;;;;5297:4:74;5285:17;;;5267:36;;5255:2;5240:18;315:35:5;5222:87:74;486:54:5;;;:::i;3021:91:54:-;3103:2;3021:91;;378:67:5;;;:::i;5687:212:54:-;;;;;;:::i;:::-;;:::i;3336:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3436:18:54;3410:7;3436:18;;;;;;;;;;;;3336:125;2295:102;;;:::i;168:41:5:-;;;;;;;;;;;;;;;;;;;;;6386:405:54;;;;;;:::i;:::-;;:::i;3664:172::-;;;;;;:::i;:::-;;:::i;3894:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:54;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;242:38:5;;;;;;;;;;;;;;;;;;;;;2084:98:54;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;666:10:67;4303:7:54;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:54;4181:166;;;;;:::o;4814:478::-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:54;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:67;5040:33:54;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;;;5083:79:54;;3519:2:74;5083:79:54;;;3501:21:74;3558:2;3538:18;;;3531:30;3597:34;3577:18;;;3570:62;3668:10;3648:18;;;3641:38;3696:19;;5083:79:54;;;;;;;;;5196:57;5205:6;666:10:67;5246:6:54;5227:16;:25;5196:8;:57::i;:::-;-1:-1:-1;5281:4:54;;4814:478;-1:-1:-1;;;;4814:478:54:o;486:54:5:-;421:23;348:2;421;:23;:::i;:::-;412:33;;:5;:33;:::i;:::-;527:13;;:3;:13;:::i;:::-;486:54;:::o;378:67::-;421:23;348:2;421;:23;:::i;:::-;412:33;;:5;:33;:::i;5687:212:54:-;666:10:67;5775:4:54;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:54;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;2295:102::-;2351:13;2383:7;2376:14;;;;;:::i;6386:405::-;666:10:67;6479:4:54;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:54;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;;;6566:85:54;;4739:2:74;6566:85:54;;;4721:21:74;4778:2;4758:18;;;4751:30;4817:34;4797:18;;;4790:62;4888:7;4868:18;;;4861:35;4913:19;;6566:85:54;4711:227:74;6566:85:54;6685:67;666:10:67;6708:7:54;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:54;;6386:405;-1:-1:-1;;;6386:405:54:o;3664:172::-;3750:4;3766:42;666:10:67;3790:9:54;3801:6;3766:9;:42::i;9962:370::-;-1:-1:-1;;;;;10093:19:54;;10085:68;;;;-1:-1:-1;;;;;10085:68:54;;4334:2:74;10085:68:54;;;4316:21:74;4373:2;4353:18;;;4346:30;4412:34;4392:18;;;4385:62;4483:6;4463:18;;;4456:34;4507:19;;10085:68:54;4306:226:74;10085:68:54;-1:-1:-1;;;;;10171:21:54;;10163:68;;;;-1:-1:-1;;;;;10163:68:54;;2709:2:74;10163:68:54;;;2691:21:74;2748:2;2728:18;;;2721:30;2787:34;2767:18;;;2760:62;2858:4;2838:18;;;2831:32;2880:19;;10163:68:54;2681:224:74;10163:68:54;-1:-1:-1;;;;;10242:18:54;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;5089:25:74;;;10293:32:54;;5062:18:74;10293:32:54;;;;;;;9962:370;;;:::o;7265:713::-;-1:-1:-1;;;;;7400:20:54;;7392:70;;;;-1:-1:-1;;;;;7392:70:54;;3928:2:74;7392:70:54;;;3910:21:74;3967:2;3947:18;;;3940:30;4006:34;3986:18;;;3979:62;4077:7;4057:18;;;4050:35;4102:19;;7392:70:54;3900:227:74;7392:70:54;-1:-1:-1;;;;;7480:23:54;;7472:71;;;;-1:-1:-1;;;;;7472:71:54;;2305:2:74;7472:71:54;;;2287:21:74;2344:2;2324:18;;;2317:30;2383:34;2363:18;;;2356:62;2454:5;2434:18;;;2427:33;2477:19;;7472:71:54;2277:225:74;7472:71:54;-1:-1:-1;;;;;7636:17:54;;7612:21;7636:17;;;;;;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;;;7663:74:54;;3112:2:74;7663:74:54;;;3094:21:74;3151:2;3131:18;;;3124:30;3190:34;3170:18;;;3163:62;3261:8;3241:18;;;3234:36;3287:19;;7663:74:54;3084:228:74;7663:74:54;-1:-1:-1;;;;;7771:17:54;;;:9;:17;;;;;;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:9;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:54;7888:6;-1:-1:-1;;;;;7879:35:54;;7907:6;7879:35;;;;5089:25:74;;5077:2;5062:18;;5044:76;7879:35:54;;;;;;;;7265:713;;;;:::o;14:196:74:-;82:20;;-1:-1:-1;;;;;131:54:74;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:196::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:74:o;416:270::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;594:29;613:9;594:29;:::i;:::-;584:39;;642:38;676:2;665:9;661:18;642:38;:::i;:::-;632:48;;503:183;;;;;:::o;691:338::-;768:6;776;784;837:2;825:9;816:7;812:23;808:32;805:2;;;858:6;850;843:22;805:2;886:29;905:9;886:29;:::i;:::-;876:39;;934:38;968:2;957:9;953:18;934:38;:::i;:::-;924:48;;1019:2;1008:9;1004:18;991:32;981:42;;795:234;;;;;:::o;1034:264::-;1102:6;1110;1163:2;1151:9;1142:7;1138:23;1134:32;1131:2;;;1184:6;1176;1169:22;1131:2;1212:29;1231:9;1212:29;:::i;:::-;1202:39;1288:2;1273:18;;;;1260:32;;-1:-1:-1;;;1121:177:74:o;1495:603::-;1607:4;1636:2;1665;1654:9;1647:21;1697:6;1691:13;1740:6;1735:2;1724:9;1720:18;1713:34;1765:4;1778:140;1792:6;1789:1;1786:13;1778:140;;;1887:14;;;1883:23;;1877:30;1853:17;;;1872:2;1849:26;1842:66;1807:10;;1778:140;;;1936:6;1933:1;1930:13;1927:2;;;2006:4;2001:2;1992:6;1981:9;1977:22;1973:31;1966:45;1927:2;-1:-1:-1;2082:2:74;2061:15;-1:-1:-1;;2057:29:74;2042:45;;;;2089:2;2038:54;;1616:482;-1:-1:-1;;;1616:482:74:o;5314:128::-;5354:3;5385:1;5381:6;5378:1;5375:13;5372:2;;;5391:18;;:::i;:::-;-1:-1:-1;5427:9:74;;5362:80::o;5447:419::-;5536:1;5579:5;5536:1;5593:267;5614:7;5604:8;5601:21;5593:267;;;5673:4;5669:1;5665:6;5661:17;5655:4;5652:27;5649:2;;;5682:18;;:::i;:::-;5732:7;5722:8;5718:22;5715:2;;;5752:16;;;;5715:2;5845:4;5831:19;;;;5791:15;;;;5593:267;;;5597:3;5511:355;;;;;:::o;5871:131::-;5931:5;5960:36;5987:8;5981:4;6056:5;6086:8;6076:2;;-1:-1:-1;6127:1:74;6141:5;;6076:2;6175:4;6165:2;;-1:-1:-1;6212:1:74;6226:5;;6165:2;6257:4;6275:1;6270:59;;;;6343:1;6338:130;;;;6250:218;;6270:59;6300:1;6291:10;;6314:5;;;6338:130;6375:3;6365:8;6362:17;6359:2;;;6382:18;;:::i;:::-;6431:8;6428:1;6424:16;6415:25;;6453:5;;;6250:218;;6552:2;6542:8;6539:16;6533:3;6527:4;6524:13;6520:36;6514:2;6504:8;6501:16;6496:2;6490:4;6487:12;6483:35;6480:77;6477:2;;;-1:-1:-1;6589:19:74;;;6621:5;;6477:2;6668:34;6693:8;6687:4;6668:34;:::i;:::-;6738:6;6734:1;6730:6;6726:19;6717:7;6714:32;6711:2;;;6749:18;;:::i;:::-;6787:20;;6066:747;-1:-1:-1;;;6066:747:74:o;6818:168::-;6858:7;6924:1;6920;6916:6;6912:14;6909:1;6906:21;6901:1;6894:9;6887:17;6883:45;6880:2;;;6931:18;;:::i;:::-;-1:-1:-1;6971:9:74;;6870:116::o;6991:437::-;7076:1;7066:12;;7123:1;7113:12;;;7134:2;;7188:4;7180:6;7176:17;7166:27;;7134:2;7241;7233:6;7230:14;7210:18;7207:38;7204:2;;;7278:77;7275:1;7268:88;7379:4;7376:1;7369:15;7407:4;7404:1;7397:15;7204:2;;7046:382;;;:::o;7433:184::-;7485:77;7482:1;7475:88;7582:4;7579:1;7572:15;7606:4;7603:1;7596:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\n\ncontract WETH is ERC20 {\n    // modify token name\n    string public constant NAME = \"WETH TEST\";\n    // modify token symbol\n    string public constant SYMBOL = \"WETH\";\n    // modify token decimals\n    uint8 public constant DECIMALS = 18;\n    // modify MILLION\n    uint256 public constant MILLION = 10**6 * (10 ** uint256(DECIMALS));\n    // modify initial token supply\n    uint256 public constant INITIAL_SUPPLY = 100 * MILLION; \n\n    constructor() ERC20(NAME, SYMBOL) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n}",
  "sourcePath": "/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/WETH.sol",
  "ast": {
    "absolutePath": "/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/WETH.sol",
    "exportedSymbols": {
      "Context": [
        36310
      ],
      "ERC20": [
        34254
      ],
      "IERC20": [
        34332
      ],
      "IERC20Metadata": [
        34394
      ],
      "WETH": [
        1655
      ]
    },
    "id": 1656,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1610,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1611,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1656,
        "sourceUnit": 34255,
        "src": "57:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1612,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34254,
              "src": "131:5:5"
            },
            "id": 1613,
            "nodeType": "InheritanceSpecifier",
            "src": "131:5:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1655,
        "linearizedBaseContracts": [
          1655,
          34254,
          34394,
          34332,
          36310
        ],
        "name": "WETH",
        "nameLocation": "123:4:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "a3f4df7e",
            "id": 1616,
            "mutability": "constant",
            "name": "NAME",
            "nameLocation": "191:4:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "168:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 1614,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "168:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "574554482054455354",
              "id": 1615,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "198:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_de6c8e57913532c2c392a59e4d5fff997a7495312342869753f1e5ce2d1528a7",
                "typeString": "literal_string \"WETH TEST\""
              },
              "value": "WETH TEST"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f76f8d78",
            "id": 1619,
            "mutability": "constant",
            "name": "SYMBOL",
            "nameLocation": "265:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "242:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 1617,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "242:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "57455448",
              "id": 1618,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "274:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                "typeString": "literal_string \"WETH\""
              },
              "value": "WETH"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2e0f2625",
            "id": 1622,
            "mutability": "constant",
            "name": "DECIMALS",
            "nameLocation": "337:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "315:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1620,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "315:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 1621,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "348:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32bc934c",
            "id": 1635,
            "mutability": "constant",
            "name": "MILLION",
            "nameLocation": "402:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "378:67:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1623,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1634,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                },
                "id": 1626,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 1624,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "412:2:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "36",
                  "id": 1625,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "416:1:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                },
                "src": "412:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "421:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1630,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1622,
                          "src": "435:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "427:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "427:17:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "421:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1633,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "420:25:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "412:33:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2ff2e9dc",
            "id": 1640,
            "mutability": "constant",
            "name": "INITIAL_SUPPLY",
            "nameLocation": "510:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "486:54:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1636,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1639,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 1637,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "527:3:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "id": 1638,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1635,
                "src": "533:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "527:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1653,
              "nodeType": "Block",
              "src": "582:50:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1648,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "598:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "598:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1650,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "610:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1647,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34114,
                      "src": "592:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1652,
                  "nodeType": "ExpressionStatement",
                  "src": "592:33:5"
                }
              ]
            },
            "id": 1654,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1643,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1616,
                    "src": "568:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1644,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1619,
                    "src": "574:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1645,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1642,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34254,
                  "src": "562:5:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "562:19:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:5"
            },
            "returnParameters": {
              "id": 1646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:5"
            },
            "scope": 1655,
            "src": "548:84:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1656,
        "src": "114:520:5",
        "usedErrors": []
      }
    ],
    "src": "32:602:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/WETH.sol",
    "exportedSymbols": {
      "Context": [
        36310
      ],
      "ERC20": [
        34254
      ],
      "IERC20": [
        34332
      ],
      "IERC20Metadata": [
        34394
      ],
      "WETH": [
        1655
      ]
    },
    "id": 1656,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1610,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1611,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1656,
        "sourceUnit": 34255,
        "src": "57:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1612,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34254,
              "src": "131:5:5"
            },
            "id": 1613,
            "nodeType": "InheritanceSpecifier",
            "src": "131:5:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1655,
        "linearizedBaseContracts": [
          1655,
          34254,
          34394,
          34332,
          36310
        ],
        "name": "WETH",
        "nameLocation": "123:4:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "a3f4df7e",
            "id": 1616,
            "mutability": "constant",
            "name": "NAME",
            "nameLocation": "191:4:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "168:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 1614,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "168:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "574554482054455354",
              "id": 1615,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "198:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_de6c8e57913532c2c392a59e4d5fff997a7495312342869753f1e5ce2d1528a7",
                "typeString": "literal_string \"WETH TEST\""
              },
              "value": "WETH TEST"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f76f8d78",
            "id": 1619,
            "mutability": "constant",
            "name": "SYMBOL",
            "nameLocation": "265:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "242:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 1617,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "242:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "57455448",
              "id": 1618,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "274:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                "typeString": "literal_string \"WETH\""
              },
              "value": "WETH"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2e0f2625",
            "id": 1622,
            "mutability": "constant",
            "name": "DECIMALS",
            "nameLocation": "337:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "315:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1620,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "315:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 1621,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "348:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32bc934c",
            "id": 1635,
            "mutability": "constant",
            "name": "MILLION",
            "nameLocation": "402:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "378:67:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1623,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1634,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                },
                "id": 1626,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 1624,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "412:2:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "36",
                  "id": 1625,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "416:1:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                },
                "src": "412:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "421:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1630,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1622,
                          "src": "435:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "427:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "427:17:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "421:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1633,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "420:25:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "412:33:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2ff2e9dc",
            "id": 1640,
            "mutability": "constant",
            "name": "INITIAL_SUPPLY",
            "nameLocation": "510:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 1655,
            "src": "486:54:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1636,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1639,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 1637,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "527:3:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "id": 1638,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1635,
                "src": "533:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "527:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1653,
              "nodeType": "Block",
              "src": "582:50:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1648,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "598:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "598:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1650,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "610:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1647,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34114,
                      "src": "592:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1652,
                  "nodeType": "ExpressionStatement",
                  "src": "592:33:5"
                }
              ]
            },
            "id": 1654,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1643,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1616,
                    "src": "568:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1644,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1619,
                    "src": "574:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1645,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1642,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34254,
                  "src": "562:5:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "562:19:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:5"
            },
            "returnParameters": {
              "id": 1646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:5"
            },
            "scope": 1655,
            "src": "548:84:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1656,
        "src": "114:520:5",
        "usedErrors": []
      }
    ],
    "src": "32:602:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-01-24T15:05:37.920Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}